{"version":3,"sources":["components/SearchBar.js","components/Nominations.js","components/SearchResults.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","loadResults","className","onChange","e","preventDefault","target","value","type","placeholder","Nominations","noms","setNoms","setBanner","handleDelete","nom","filter","item","length","nomList","map","idx","onClick","printNoms","SearchResults","results","resultsList","result","buttonDisabled","includes","isAlreadyNominated","disabled","handleAdd","printResults","App","API_KEY","process","useState","setResults","banner","term","a","fetch","then","res","json","data","Search","resultList","forEach","title","Title","year","Year","entry","push","class","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4062b0f1.chunk.js","sourcesContent":["import React from \"react\"; \n\nconst SearchBar = (props) => {\n\n  const loadResults  = props.loadResults; \n\n  function handleEnter(e) {\n    e.preventDefault(); \n    loadResults(e.target.value); \n  }\n\n  return (\n    <div className=\"search\">\n        <h1>The Shoppies</h1>\n        <p>Search for your favorite movie. </p>\n        <input onChange={handleEnter} type=\"text\" placeholder=\"Enter title or keyword\"></input>\n    </div>\n  )\n}\n\nexport default SearchBar; ","import React from \"react\"; \n\nconst Nominations = (props) => {\n\n  const { noms, setNoms, setBanner } = props; \n\n  function handleDelete(nom) {\n    setNoms(noms => noms.filter(item => item !== nom))\n    if (noms.length <= 5) {\n      setBanner(false); \n    }\n  }\n\n  function printNoms(noms) {\n    const nomList = noms.map((nom, idx) => {\n      return (\n        <li key={idx}>\n          {nom}\n          <button onClick={() => handleDelete(nom)}>Delete</button>\n        </li>\n      )\n    })\n\n    return (\n      <div className=\"noms-list\">\n        <ul>{nomList}</ul>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"container\">\n      <h2>Nominations <span>(up to five)</span></h2>\n      {noms.length \n      ? \n      printNoms(noms)\n      : \n      <p>There are no nominations to show - add some from the search results!</p>\n      }\n    \n    </div>\n  )\n}\n\nexport default Nominations; ","import React from \"react\"; \n\nconst SearchResults = (props) => {\n\n  const { results, setNoms, noms, setBanner } = props; \n\n  function handleAdd(result) {\n    if (noms.length >=5) {\n      setBanner(true); \n    } else {\n      setNoms(noms => [...noms, result]); \n    }\n  }\n\n  function isAlreadyNominated (result, noms) {\n    if (noms.includes(result)) {\n      return true; \n    }\n  }\n\n  function printResults(results) {\n\n    const resultsList = results.map((result, idx) => {\n\n      let buttonDisabled = false; \n\n      if (isAlreadyNominated(result, noms)) {\n        buttonDisabled = true; \n      }\n      return (\n        <li key={idx}>\n         {result}\n         <button disabled={buttonDisabled} onClick={() => handleAdd(result, idx)}>Nominate</button>\n        </li>\n      )\n    })\n\n    return (\n      <div className=\"results-list\">\n        <ul>{resultsList}</ul>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"container\">\n      <h2>Search Results</h2>\n      {results.length ? \n         printResults(results)\n      :\n        <p>No results to show - enter one in the search (or check your spelling!)</p>\n      }\n\n    </div>\n  )\n}\n\nexport default SearchResults; ","import './App.css';\nimport React, { useState } from \"react\"; \n\n// import { CSSTransition } from 'react-transition-group'; \n\nimport SearchBar from \"./components/SearchBar\"; \nimport Nominations from \"./components/Nominations\"; \nimport SearchResults from \"./components/SearchResults\"; \n\nconst App = () => {\n\n  const API_KEY = process.env.REACT_APP_OMDB_KEY; \n\n  const [results, setResults] = useState([]); \n  const [noms, setNoms] = useState([]); \n  const [banner, setBanner] = useState(false); \n\n  async function loadResults(term) {\n    await fetch(`https://www.omdbapi.com/?s=${term}&apikey=${API_KEY}`)\n    .then(res => res.json())\n    .then(data => {\n      if (data.Search) {\n        let resultList = []; \n        data.Search.forEach(item => {\n           const title = item.Title; \n           const year = item.Year; \n           const entry = `${title} (${year})`; \n           resultList.push(entry); \n        })\n        setResults([...resultList]); \n      } else {\n        setResults([]); \n      }\n    })\n  }\n\n\n  return (\n    <div className=\"App\">\n\n      {banner && \n        <div class=\"warning-banner\">\n        <p>{banner ? \"You've already got five nominees!\" : \"\"}</p>\n      </div>\n      }\n        <SearchBar loadResults={loadResults} />\n\n      <div className=\"results-nominations\">\n        <SearchResults results={results} setNoms={setNoms} noms={noms} setBanner={setBanner}\n          />\n        <Nominations noms={noms}  setNoms={setNoms} setBanner={setBanner} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}